#!/bin/bash

# ==============================================================================
# Script t·ª± ƒë·ªông c·∫≠p nh·∫≠t image cho Docker Compose tr√™n server t·ª´ xa.
#
# C√°ch d√πng:
#   ./update_compose_remote.sh <t√™n_image> <tag_m·ªõi>
#
# V√≠ d·ª•:
#   ./update_compose_remote.sh alpine 3.20
# ==============================================================================

# --- C·∫§U H√åNH ---
REMOTE_USER="toancs"                     # << THAY ƒê·ªîI: User tr√™n server
REMOTE_HOST="192.168.1.100"            # << THAY ƒê·ªîI: IP/hostname server
# << THAY ƒê·ªîI: ƒê∆∞·ªùng d·∫´n TUY·ªÜT ƒê·ªêI t·ªõi file docker-compose.yml tr√™n server
REMOTE_COMPOSE_FILE="/home/toancs/compose-test/docker-compose.yml"

# --- M√ÄU S·∫ÆC CHO OUTPUT ---
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# --- KI·ªÇM TRA THAM S·ªê ƒê·∫¶U V√ÄO ---
if [[ -z "$1" || -z "$2" ]]; then
  echo -e "${RED}L·ªói: Thi·∫øu tham s·ªë.${NC}"
  echo "C√°ch d√πng: $0 <t√™n_image> <tag_m·ªõi>"
  echo "V√≠ d·ª•:    $0 alpine 3.20"
  exit 1
fi

# --- THI·∫æT L·∫¨P BI·∫æN ---
IMAGE_NAME="$1"
NEW_TAG="$2"
FULL_IMAGE_NAME="$IMAGE_NAME:$NEW_TAG"
LOCAL_TAR_FILE="/tmp/${IMAGE_NAME}-${NEW_TAG}.tar"

# H√†m d·ªçn d·∫πp file .tar tr√™n m√°y client khi script k·∫øt th√∫c
cleanup() {
  echo -e "${YELLOW}üßπ D·ªçn d·∫πp file t·∫°m tr√™n client: ${LOCAL_TAR_FILE}${NC}"
  rm -f "$LOCAL_TAR_FILE"
}
trap cleanup EXIT

# ==================================================
# B∆Ø·ªöC 1: PULL V√Ä SAVE IMAGE TR√äN M√ÅY CLIENT
# ==================================================
echo -e "${GREEN}--- B∆Ø·ªöC 1: Chu·∫©n b·ªã Image tr√™n Client ---${NC}"
echo -e "üîΩ ƒêang t·∫£i image ${FULL_IMAGE_NAME}..."
docker pull "$FULL_IMAGE_NAME"
if [[ $? -ne 0 ]]; then
  echo -e "${RED}‚ùå T·∫£i image th·∫•t b·∫°i!${NC}"
  exit 1
fi

echo -e "üì¶ ƒêang ƒë√≥ng g√≥i image v√†o ${LOCAL_TAR_FILE}..."
docker save -o "$LOCAL_TAR_FILE" "$FULL_IMAGE_NAME"
if [[ $? -ne 0 ]]; then
  echo -e "${RED}‚ùå ƒê√≥ng g√≥i image th·∫•t b·∫°i!${NC}"
  exit 1
fi
echo -e "‚úÖ Chu·∫©n b·ªã image th√†nh c√¥ng."

# ==================================================
# B∆Ø·ªöC 2: G·ª¨I FILE V√Ä KI·ªÇM TRA CHECKSUM
# ==================================================
echo -e "\n${GREEN}--- B∆Ø·ªöC 2: G·ª≠i file l√™n Server v√† x√°c th·ª±c ---${NC}"
REMOTE_TEMP_DIR="/tmp" # G·ª≠i v√†o th∆∞ m·ª•c /tmp tr√™n server cho an to√†n

echo -e "üì§ ƒêang g·ª≠i ${LOCAL_TAR_FILE} sang ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_TEMP_DIR} ..."
scp "$LOCAL_TAR_FILE" "${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_TEMP_DIR}"
if [[ $? -ne 0 ]]; then
  echo -e "${RED}‚ùå G·ª≠i file th·∫•t b·∫°i!${NC}"
  exit 1
fi

# --- t√≠nh checksum local ---
LOCAL_SUM=$(md5sum "$LOCAL_TAR_FILE" | awk '{print $1}')

# --- t√≠nh checksum remote ---
REMOTE_TAR_FILE="${REMOTE_TEMP_DIR}/$(basename "$LOCAL_TAR_FILE")"
REMOTE_SUM=$(ssh "${REMOTE_USER}@${REMOTE_HOST}" "md5sum ${REMOTE_TAR_FILE}" | awk '{print $1}')

# --- so s√°nh ---
echo "üîë MD5 local :  ${LOCAL_SUM}"
echo "üîë MD5 remote:  ${REMOTE_SUM}"

if [[ "$LOCAL_SUM" != "$REMOTE_SUM" ]]; then
  echo -e "${RED}‚ö†Ô∏è File g·ª≠i xong nh∆∞ng checksum KH√îNG kh·ªõp! H·ªßy b·ªè qu√° tr√¨nh.${NC}"
  # (T√πy ch·ªçn) X√≥a file l·ªói tr√™n server
  ssh "${REMOTE_USER}@${REMOTE_HOST}" "rm ${REMOTE_TAR_FILE}"
  exit 1
fi
echo -e "‚úÖ File ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng v√† checksum kh·ªõp!"

# ==================================================
# B∆Ø·ªöC 3: TH·ª∞C THI C·∫¨P NH·∫¨T TR√äN SERVER
# ==================================================
echo -e "\n${GREEN}--- B∆Ø·ªöC 3: Th·ª±c thi c·∫≠p nh·∫≠t tr√™n Server qua SSH ---${NC}"

# S·ª≠ d·ª•ng "here document" (<< 'EOF') ƒë·ªÉ g·ª≠i m·ªôt lo·∫°t l·ªánh sang server
# D√πng 'EOF' trong nh√°y ƒë∆°n ƒë·ªÉ ngƒÉn c√°c bi·∫øn local b·ªã expand tr∆∞·ªõc khi g·ª≠i
ssh -t "${REMOTE_USER}@${REMOTE_HOST}" << 'EOF'
  # --- C·∫§U H√åNH TR√äN SERVER (ƒë∆∞·ª£c truy·ªÅn t·ª´ client) ---
  # D√≤ng n√†y s·∫Ω ƒë∆∞·ª£c thay th·∫ø b·∫±ng l·ªánh sed tr∆∞·ªõc khi ch·∫°y
  # sed s·∫Ω ch√®n c√°c gi√° tr·ªã bi·∫øn t·ª´ client v√†o ƒë√¢y
  export IMAGE_NAME="<image_name>"
  export NEW_TAG="<new_tag>"
  export FULL_IMAGE_NAME="<full_image_name>"
  export REMOTE_TAR_FILE="<remote_tar_file>"
  export REMOTE_COMPOSE_FILE="<remote_compose_file>"
  export GREEN='\033[0;32m'
  export YELLOW='\033[1;33m'
  export RED='\033[0;31m'
  export NC='\033[0m' # No Color

  echo -e "${YELLOW}--- ƒêANG TH·ª∞C THI TR√äN SERVER ---${NC}"

  # D·ª´ng script ngay n·∫øu c√≥ l·ªói
  set -e

  # 1. Load image
  echo "üì¶ (Server) ƒêang n·∫°p image t·ª´ ${REMOTE_TAR_FILE}..."
  docker load -i "${REMOTE_TAR_FILE}"

  # 2. T√¨m image c≈© trong file compose
  echo "üîé (Server) T√¨m ki·∫øm image c≈© trong ${REMOTE_COMPOSE_FILE}..."
  # Grep d√≤ng c√≥ ch·ª©a "image: <t√™n_image>:", l·∫•y d√≤ng ƒë·∫ßu ti√™n, v√† c·∫Øt chu·ªói ƒë·ªÉ l·∫•y t√™n ƒë·∫ßy ƒë·ªß
  OLD_FULL_IMAGE=$(grep "image: *${IMAGE_NAME}:" "${REMOTE_COMPOSE_FILE}" | head -n 1 | awk '{print $2}')

  if [[ -z "$OLD_FULL_IMAGE" ]]; then
    echo -e "${RED}‚ùå (Server) Kh√¥ng t√¨m th·∫•y service n√†o s·ª≠ d·ª•ng image '${IMAGE_NAME}' trong file compose. D·ª´ng l·∫°i.${NC}"
    exit 1
  fi
  echo "‚úÖ (Server) T√¨m th·∫•y phi√™n b·∫£n c≈© l√†: ${OLD_FULL_IMAGE}"

  # 3. Thay th·∫ø image c≈© b·∫±ng image m·ªõi
  echo "‚úçÔ∏è (Server) C·∫≠p nh·∫≠t ${OLD_FULL_IMAGE} -> ${FULL_IMAGE_NAME}..."
  # D√πng `|` l√†m d·∫•u ph√¢n c√°ch cho sed ƒë·ªÉ tr√°nh l·ªói v·ªõi ƒë∆∞·ªùng d·∫´n
  sed -i "s|${OLD_FULL_IMAGE}|${FULL_IMAGE_NAME}|g" "${REMOTE_COMPOSE_FILE}"

  # 4. Ch·∫°y docker-compose up
  echo "üöÄ (Server) √Åp d·ª•ng thay ƒë·ªïi v·ªõi 'docker compose up'..."
  # L·∫•y th∆∞ m·ª•c ch·ª©a file compose ƒë·ªÉ `cd` v√†o ƒë√≥ tr∆∞·ªõc khi ch·∫°y
  COMPOSE_DIR=$(dirname "${REMOTE_COMPOSE_FILE}")
  cd "${COMPOSE_DIR}" && docker compose up -d --remove-orphans

  # 5. D·ªçn d·∫πp file .tar tr√™n server
  echo "üßπ (Server) D·ªçn d·∫πp file ${REMOTE_TAR_FILE}..."
  rm "${REMOTE_TAR_FILE}"

  echo -e "${GREEN}‚úÖ (Server) Qu√° tr√¨nh c·∫≠p nh·∫≠t ho√†n t·∫•t!${NC}"

EOF` \
| sed -e "s|<image_name>|${IMAGE_NAME}|g" \
      -e "s|<new_tag>|${NEW_TAG}|g" \
      -e "s|<full_image_name>|${FULL_IMAGE_NAME}|g" \
      -e "s|<remote_tar_file>|${REMOTE_TAR_FILE}|g" \
      -e "s|<remote_compose_file>|${REMOTE_COMPOSE_FILE}|g"
# Trick: ƒêo·∫°n `| sed ...` ·ªü tr√™n s·∫Ω t√¨m v√† thay th·∫ø c√°c placeholder trong here document
# b·∫±ng gi√° tr·ªã bi·∫øn th·ª±c t·∫ø t·ª´ client tr∆∞·ªõc khi th·ª±c thi l·ªánh ssh.

if [[ $? -ne 0 ]]; then
    echo -e "${RED}‚ùå C√≥ l·ªói x·∫£y ra trong qu√° tr√¨nh th·ª±c thi tr√™n server!${NC}"
    exit 1
fi

echo -e "\n${GREEN}üéâüéâüéâ TO√ÄN B·ªò QU√Å TR√åNH C·∫¨P NH·∫¨T ƒê√É HO√ÄN T·∫§T TH√ÄNH C√îNG! üéâüéâüéâ${NC}"